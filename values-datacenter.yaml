clusterGroup:
  name: datacenter
  isHubCluster: true

  proposedOptions:
    manageGitops: True
    isHubCluster: True

# This section is where you can add namespaces you want to create
# The Validated Patterns framework will create these namespaces on your behalf.
# You will not have to create namespace manifests as part of you application.
# The namespaces here are meant to be the ones that you would create in a
# Hub/Datacenter cluster that defines the hub environment.
#
# Example:
#namespaces:
#  - app-namespace
#  - open-cluster-management
#
# This section is part of the clusterGroup section
#
  namespaces:
  - open-cluster-management
  - application-ci

# This section is where you list the operators that your application workload
# will need. The Validated Pattern Framework will install the operators listed on your behalf.
#Define the operator subscriptions - if a specific channel is required, then include it; else 
#create stanza without it to pull the default channel. For operators that are coming from community
#or certified operators you must add a source declaration. See opendatahub example below.
# The supported options are:
# - name: <Name of the operator> 
#   namespace: <target namespace> if ommited the operator will choose it's target namespace.
#   source: <source for the operator: e.g redhat-operators | community-operators>
#   channel: < Channel for the operator> If ommited the operator will use the defaultChannel
#   csv: <cluster service version> This will be used only if useCSV is set to True in values-global.yaml
#
# Example
#  - name: advanced-cluster-management
#    namespace: open-cluster-management
#    source: redhat-operators
#    channel: release-2.3
#    csv: v2.3.2
#
# You can use the oc cli to get the details for each operator such as csv and defaultChannel.
# $ oc get packagemanisfests - This command will list all the available operators
# $ oc get packagemanifest <operator> -o yaml - will print the details in yaml format
#
  subscriptions:
  - name: advanced-cluster-management
    namespace: open-cluster-management
    channel: release-2.3
    csv: advanced-cluster-management.v2.3.2

  - name: openshift-pipelines-operator-rh
    csv: redhat-openshift-pipelines.v1.5.1

  - name: opendatahub-operator
    csv: opendatahub-operator.v1.1.2
    source: community-operators

#Define the argocd project
  projects:
  - datacenter
 
#Define the applications to be manage by argocd - each defined application below is presented as
#an individual application within the argocd user interface.

  applications:
  - name: acm
    namespace: open-cluster-management
    project: datacenter
    path: common/acm
    ignoreDifferences:
    - group: internal.open-cluster-management.io
      kind: ManagedClusterInfo
      jsonPointers:
      - /spec/loggingCA

  - name: pipelines
    namespace: application-ci
    project: datacenter
    path: charts/datacenter/pipelines


#
#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#  - name: pipelines
#    namespace: testing
#    project: datacenter
#    path: applications/pipeline
#    repoURL: https://github.com/you/applications.git
#    targetRevision: main
#    overrides:
#    - name: test
#      value: true 
#  
#  - name: pipelines
#    namespace: staging
#    project: datacenter
#    path: applications/pipeline
#    repoURL: https://github.com/you/applications.git
#    targetRevision: main
#  
#   Additional applications
#   Be sure to include additional resources your apps will require
#   +X machines
#   +Y RAM
#   +Z CPU
#  - name: vendor-app
#    namespace: default
#    project: vendor
#    path: path/to/myapp
#    repoURL: https://github.com/vendor/applications.git
#    targetRevision: main

  managedSites:
  - name: edge
    # Optional - Point to a different repo
    # repoURL: https://github.com/dagger-refuse-cool/mySite.git
    # Must contain values-{sitename}.yaml at the top level
    targetRevision: main
    helmOverrides:
    # Values must be strings!
    - name: site.isHubCluster
      value: "false"
    clusterSelector:
#      matchLabels:
#        site: factory
      matchExpressions:
      - key: vendor
        operator: In
        values:
          - OpenShift

