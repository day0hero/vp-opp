clusterGroup:
  name: factory
  isHubCluster: false

# This section is where you can add namespaces you want to create
# The Validated Patterns framework will create these namespaces on your behalf.
# You will not have to create namespace manifests as part of you application.
# The namespaces here are meant to be the ones that you would create in a
# Factory/Edge cluster that defines the production environment.
#
# Example:
#namespaces:
#  - app-namespace
#  - open-cluster-management
#
# This section is part of the clusterGroup section
  namespaces:
  - app-namespace

# This section is where you list the operators that your application workload
# will need. The Validated Pattern Framework will install the operators listed on
# your behalf.
# The supported options are:
# - name: <Name of the operator> 
#   namespace: <target namespace> if ommited the operator will choose it's target namespace.
#   source: <source for the operator: e.g redhat-operators | community-operators>
#   channel: < Channel for the operator> If ommited the operator will use the defaultChannel
#   csv: <cluster service version> This will be used only if useCSV is set to True in values-global.yaml
#
# Example
#  - name: advanced-cluster-management
#    namespace: open-cluster-management
#    source: redhat-operators
#    channel: release-2.3
#    csv: v2.3.2
#
# You can use the oc cli to get the details for each operator such as csv and defaultChannel.
# $ oc get packagemanisfests - This command will list all the available operators
# $ oc get packagemanifest <operator> -o yaml - will print the details in yaml format
#
  subscriptions:
  - name: opendatahub-operator
    source: community-operators
    csv: opendatahub-operator.v1.1.0


#
# This section creates projects in the openshift-gitops ArgoCD instance
# These projects are useful to managed hub/datacenter and factory/edge components using ArgoCD,
#
  projects:
  - factory

#
#  To have apps in multiple flavors, use namespaces and use helm overrides as appropriate
#
#  - name: pipelines
#    namespace: production
#    project: datacenter
#    path: applications/pipeline
#    repoURL: https://github.com/you/applications.git
#    targetRevision: stable
#    overrides:
#    - name: myparam
#      value: myparam 
#  
#  - name: pipelines
#    namespace: staging
#    project: datacenter
#    path: applications/pipeline
#    repoURL: https://github.com/your/applications.git
#    targetRevision: main
